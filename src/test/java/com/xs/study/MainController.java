package com.xs.study;

import com.xs.study.hibernate.model.PersonEntity;
import com.xs.study.spring.jdbc.PersonRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@SpringBootApplication
@Controller    // This means that this class is a Controller
@RequestMapping(path = "/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PersonRepository personRepository;

    public static void main(String args[]) {
        SpringApplication.run(MainController.class, args);
    }

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public
    @ResponseBody
    String addNewUser(@RequestParam String name) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        PersonEntity n = new PersonEntity();
        n.setName(name);
        personRepository.save(n);
        return "Saved";
    }

    @GetMapping(path = "/all")
    public
    @ResponseBody
    Iterable<PersonEntity> getAllUsers() {
        // This returns a JSON or XML with the users
        return personRepository.findAll();
    }

}